/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.sig.view;

import com.sig.controller.InvoiceActionListener;
import com.sig.model.InvoiceHeader;
import com.sig.model.InvoiceHeaderTableModel;
import com.sig.controller.InvoiceTableSelectionListener;
import com.sig.model.InvoiceLine;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import javax.swing.JLabel;
import javax.swing.JTable;

public class InvoiceFrame extends javax.swing.JFrame {

    /**
     * Creates new form InvoiceFrame
     */
    public InvoiceFrame() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        invHTbl = new javax.swing.JTable();
        newInvoiceButton = new javax.swing.JButton();
        deleteInvoiceButton = new javax.swing.JButton();
        invnumlbl = new javax.swing.JLabel();
        invdatelbl = new javax.swing.JLabel();
        cusnamelbl = new javax.swing.JLabel();
        invtotallbl = new javax.swing.JLabel();
        custNameLbl = new javax.swing.JLabel();
        invDateLbl = new javax.swing.JLabel();
        invNumLbl = new javax.swing.JLabel();
        invTotalIbl = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        invLTbl = new javax.swing.JTable();
        newLineButton = new javax.swing.JButton();
        deleteLineButton = new javax.swing.JButton();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        loaditem = new javax.swing.JMenuItem();
        saveitem = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        invHTbl.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        invHTbl.setToolTipText("");
        invHTbl.getSelectionModel().addListSelectionListener(selectionListener);
        jScrollPane1.setViewportView(invHTbl);
        invHTbl.getColumnModel().getSelectionModel().setSelectionMode(javax.swing.ListSelectionModel.SINGLE_INTERVAL_SELECTION);

        newInvoiceButton.setText("New Invoice");
        newInvoiceButton.addActionListener(actionListener);

        deleteInvoiceButton.setText("Delete Invoice");
        deleteInvoiceButton.addActionListener(actionListener);

        invnumlbl.setText("Invoice Num");

        invdatelbl.setText("Invoice Date");

        cusnamelbl.setText("Customer Name");

        invtotallbl.setText("Invoice Total");

        invLTbl.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        jScrollPane2.setViewportView(invLTbl);

        newLineButton.setText("New Line");
        newLineButton.addActionListener(actionListener);

        deleteLineButton.setText("Delete Line");
        deleteInvoiceButton.addActionListener(actionListener);

        jMenu1.setText("File");

        loaditem.setText("Load Files");
        loaditem.addActionListener(actionListener);
        jMenu1.add(loaditem);

        saveitem.setText("Save Files");
        saveitem.addActionListener(actionListener);
        jMenu1.add(saveitem);

        jMenuBar1.add(jMenu1);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 385, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(31, 31, 31)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(cusnamelbl)
                            .addComponent(invnumlbl)
                            .addComponent(invtotallbl)
                            .addComponent(invdatelbl))
                        .addGap(224, 224, 224)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(invTotalIbl)
                            .addComponent(invNumLbl)
                            .addComponent(invDateLbl)
                            .addComponent(custNameLbl))))
                .addContainerGap(31, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addGap(64, 64, 64)
                .addComponent(newInvoiceButton)
                .addGap(67, 67, 67)
                .addComponent(deleteInvoiceButton)
                .addGap(136, 136, 136)
                .addComponent(newLineButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(deleteLineButton)
                .addGap(100, 100, 100))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(26, 26, 26)
                        .addComponent(invNumLbl)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(invDateLbl)
                            .addComponent(invnumlbl))
                        .addGap(4, 4, 4)
                        .addComponent(cusnamelbl)
                        .addGap(14, 14, 14)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(custNameLbl)
                                .addGap(8, 8, 8)
                                .addComponent(invTotalIbl))
                            .addComponent(invdatelbl))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(invtotallbl)
                        .addGap(18, 18, 18)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 386, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 510, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(39, 39, 39)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(newInvoiceButton)
                    .addComponent(deleteInvoiceButton)
                    .addComponent(newLineButton)
                    .addComponent(deleteLineButton))
                .addContainerGap(20, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(InvoiceFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(InvoiceFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(InvoiceFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(InvoiceFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            @Override
            public void run() {
              new InvoiceFrame().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel cusnamelbl;
    private javax.swing.JLabel custNameLbl;
    private javax.swing.JButton deleteInvoiceButton;
    private javax.swing.JButton deleteLineButton;
    private javax.swing.JLabel invDateLbl;
    private javax.swing.JTable invHTbl;
    private javax.swing.JTable invLTbl;
    private javax.swing.JLabel invNumLbl;
    private javax.swing.JLabel invTotalIbl;
    private javax.swing.JLabel invdatelbl;
    private javax.swing.JLabel invnumlbl;
    private javax.swing.JLabel invtotallbl;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JMenuItem loaditem;
    private javax.swing.JButton newInvoiceButton;
    private javax.swing.JButton newLineButton;
    private javax.swing.JMenuItem saveitem;
    // End of variables declaration//GEN-END:variables
private InvoiceActionListener actionListener=new InvoiceActionListener(this);
private ArrayList<InvoiceHeader> invoicesArray;
private InvoiceHeaderTableModel headerTableModel ;
private InvoiceTableSelectionListener selectionListener=new InvoiceTableSelectionListener(this);
private ArrayList <InvoiceLine> linesArray;
public static SimpleDateFormat dateformat=new SimpleDateFormat("dd-MM-yyyy");
    

public void setInvoicesArray(ArrayList<InvoiceHeader> invoicesArray) {
        this.invoicesArray = invoicesArray;
    }

    public ArrayList<InvoiceHeader> getInvoicesArray() {
        return invoicesArray;
    }

    public ArrayList<InvoiceLine> getLinesArray() {
        return linesArray;
    }

    public void setLinesArray(ArrayList<InvoiceLine> linesArray) {
        this.linesArray = linesArray;
    }
 

   // public InvoiceHeader getInvoiceHeader(int code){
      //  for(InvoiceHeader inv:invoicesArray){
      //      if(inv.getNum()==code){
      ////          return inv;
      //      }
     //   }
     ///   return null;
    //}

   public InvoiceHeader getInvObject(int code) {
       for(InvoiceHeader inv : invoicesArray) {
          if(inv.getNum()==code){
              return inv;
           }
       }
       return null;
   }
   // public InvoiceHeader getInvObject(int invid) {
   //     return null;
    //}

    public InvoiceHeaderTableModel getHeaderTableModel() {
        return headerTableModel;
    }

    public void setHeaderTableModel(InvoiceHeaderTableModel headerTableModel) {
        this.headerTableModel = headerTableModel;
    }

    public JTable getInvHTbl() {
        return invHTbl;
    }

    public JTable getInvLTbl() {
        return invLTbl;
    }

    public JLabel getCusnamelbl() {
        return cusnamelbl;
    }

    public JLabel getInvdatelbl() {
        return invdatelbl;
   }

    public JLabel getInvnumlbl() {
       return invnumlbl;
    }

   public JLabel getInvtotallbl() {
        return invtotallbl;
    }

    public InvoiceActionListener getActionListener() {
        return actionListener;
    }
    public void displayInvoices(){
    
        System.out.println(",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,");
        for(InvoiceHeader invoice :invoicesArray)
        {
            System.out.println("InvoiceHeader{num="+invoice.getNum()+
                    ",customer="+invoice.getCustomer()+",invDate="
                    +dateformat.format(invoice.getInvDate())+",Total="+invoice.getInvoiceTotal()+"}");
            for(InvoiceLine line:invoice.getLines()){
                System.out.println("\t\tInvoiceLine{item"+line.getItem()+",price="+line.getPrice()+",count="
                +line.getCount()+",total="+line.getLineTotal()+"}");
            }
        }
                System.out.println(",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,");

    }

}



